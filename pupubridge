#!/bin/sh -eu

if test $# -lt 2; then
    exec 2>&1
    echo Renames this ethernet tunnel to LINK_NAME and adds it to given BRIDGE.
    echo If multiple bridges are given, user may select it by passing it as an parameter to ssh.
    echo
    echo Usage: Add the following line to ~root/.ssh/authorized_keys:
    echo "       command=\"$0 LINK_NAME BRIDGE..\",no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty SSH_PUBLIC_KEY"
    exit 1
fi

link_new="$1"
link_orig=`sed -nr 's/^iff:\s*(.*)/\1/p' /proc/$PPID/fdinfo/*`

if test -z "$link_orig"; then
    echo "This session has no ethernet tunnel. Are you running: ssh -o 'Tunnel=ethernet'" >&2
    exit 2
fi

# Removing old if any
ip link delete "$link_new" 2>/dev/null || true

# Renaming current link and bring it up
ip link set "$link_orig" name "$link_new" up

# Finding out suitable bridge
shift
error="User may request the following: $@"
bridge="$1"
for x in "$@"; do
    if test "$x" = "${SSH_ORIGINAL_COMMAND-}"; then
        bridge="$x"
        error=
    fi
done

# Add to bridge
brctl addif "$bridge" "$link_new"

echo Tunnel "$link_new" is connected to "$bridge". $error
